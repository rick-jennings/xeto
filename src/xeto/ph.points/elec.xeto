//////////////////////////////////////////////////////////////////////////
// Temporary defs - later we will put them in def trio
//////////////////////////////////////////////////////////////////////////

ElecLine : Enum {
  pL1 <key:"L1">
  pL2 <key:"L2">
  pL3 <key:"L3">
}

ElecLineToLine : Enum {
  pL1L2 <key:"L1-L2">
  pL2L3 <key:"L2-L3">
  pL3L1 <key:"L3-L1">
}

ElecLineToNeutral : Enum {
  pL1N <key:"L1-N">
  pL2N <key:"L2-N">
  pL3N <key:"L3-N">
}

//////////////////////////////////////////////////////////////////////////
// Sensor for electricity (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for electricity
ElecSensor : NumberPoint & Sensor <abstract> { elec }

//////////////////////////////////////////////////////////////////////////
// Sensors for electricity type (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for AC electricity
ElecAcSensor : ElecSensor <abstract> { ac }

// Sensor for DC electricity
ElecDcSensor : ElecSensor <abstract> { dc }

//////////////////////////////////////////////////////////////////////////
// Setpoint for electricity (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for electricity
ElecSp : NumberPoint & Sp <abstract> { elec }

//////////////////////////////////////////////////////////////////////////
// Setpoints for electricity type (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for AC electricity
ElecAcSp : ElecSp <abstract> { ac }

// Setpoint for DC electricity
ElecDcSp : ElecSp <abstract> { dc }

//////////////////////////////////////////////////////////////////////////
// Setpoint types for electricity
//////////////////////////////////////////////////////////////////////////

// Setpoint for maximum electric primary quantity
ElecMaxSp : ElecSp { max }
//////////////////////////////////////////////////////////////////////////
// Sensors for primary quantities (all specs, except freq, are abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for electric voltage
ElecVoltSensor : ElecSensor <abstract> {
  volt
  unit: Unit<quantity:"electricPotential"> "V"
}

// Sensor for electric current
ElecCurrentSensor : ElecSensor <abstract> {
  current
  unit: Unit<quantity:"electricCurrent"> "A"
}

// Sensor for electric power
ElecPowerSensor : ElecSensor <abstract> {
  power
  unit: Unit<quantity:"power"> "kW"
}

// Sensor for electric energy
ElecEnergySensor : ElecSensor <abstract> {
  energy
  unit: Unit<quantity:"energy"> "kWh"
}

// Sensor for electric demand
ElecDemandSensor : ElecSensor <abstract> {
  demand
  unit: Unit<quantity:"power"> "kW"
}

// Sensor for electric power factor
ElecPfSensor : ElecSensor <abstract> { pf }

// Sensor for electric frequency
ElecFreqSensor : ElecSensor & ElecAcSensor {
  freq
  unit: Unit<quantity:"frequency"> "Hz"
}

//////////////////////////////////////////////////////////////////////////
// Setpoints for primary quantities (all specs, except freq, are abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for electric voltage
ElecVoltSp : ElecSp <abstract> {
  volt
  unit: Unit<quantity:"electricPotential"> "V"
}

// Setpoint for maximum electric current
ElecCurrentMaxSp : ElecMaxSp <abstract> {
  current
  unit: Unit<quantity:"electricCurrent"> "A"
}

// Setpoint for maximum electric power
ElecPowerMaxSp : ElecMaxSp <abstract> {
  power
  unit: Unit<quantity:"power"> "kW"
}

// Setpoint for maximum electric energy
ElecEnergyMaxSp : ElecMaxSp <abstract> {
  energy
  unit: Unit<quantity:"energy"> "kWh"
}

// Setpoint for maximum electric demand
ElecDemandMaxSp : ElecMaxSp <abstract> {
  demand
  unit: Unit<quantity:"power"> "kW"
}

// Setpoint for electric power factor
ElecPfSp : ElecSp <abstract> { pf }

// Setpoint for electric frequency
ElecFreqSp : ElecSp & ElecAcSp {
  freq
  unit: Unit<quantity:"frequency"> "Hz"
}

//////////////////////////////////////////////////////////////////////////
// Sensors for DC electricity type (leaves)
//////////////////////////////////////////////////////////////////////////

// Sensor for DC electric current
ElecDcCurrentSensor : ElecCurrentSensor & ElecDcSensor

// Sensor for DC electric voltage
ElecDcVoltSensor : ElecVoltSensor & ElecDcSensor

// Sensor for DC electric power
ElecDcPowerSensor : ElecPowerSensor & ElecDcSensor

// Sensor for DC electric energy
ElecDcEnergySensor : ElecEnergySensor & ElecDcSensor

//////////////////////////////////////////////////////////////////////////
// Setpoints for DC electricity type (leaves)
//////////////////////////////////////////////////////////////////////////

// Setpoint for maximum DC electric current
ElecDcCurrentMaxSp : ElecCurrentMaxSp & ElecDcSp

// Setpoint for DC electric voltage
ElecDcVoltSp : ElecVoltSp & ElecDcSp

// Setpoint for maximum DC electric power
ElecDcPowerMaxSp : ElecPowerMaxSp & ElecDcSp

//////////////////////////////////////////////////////////////////////////
// Sensors for AC power subtypes (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for AC active power
ElecActivePowerSensor : ElecPowerSensor & ElecAcSensor <abstract> { active }

// Sensor for AC reactive power
ElecReactivePowerSensor : ElecPowerSensor & ElecAcSensor <abstract> { reactive }

// Sensor for AC apparent power
ElecApparentPowerSensor : ElecPowerSensor & ElecAcSensor <abstract> { apparent }

//////////////////////////////////////////////////////////////////////////
// Sensors for the phase location of AC electric power (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for phase AC electric power
ElecPhasePowerSensor : ElecPowerSensor & ElecAcSensor <abstract> { phasePower: ElecLine }

// Sensor for line 1 AC electric active power
ElecL1ActivePowerSensor : ElecActivePowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L1" }

// Sensor for line 2 AC electric active power
ElecL2ActivePowerSensor : ElecActivePowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L2" }

// Sensor for line 3 AC electric active power
ElecL3ActivePowerSensor : ElecActivePowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L3" }

// Sensor for line 1 AC electric reactive power
ElecL1ReactivePowerSensor : ElecReactivePowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L1" }

// Sensor for line 2 AC electric reactive power
ElecL2ReactivePowerSensor : ElecReactivePowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L2" }

// Sensor for line 3 AC electric reactive power
ElecL3ReactivePowerSensor : ElecReactivePowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L3" }

// Sensor for line 1 AC electric apparent power
ElecL1ApparentPowerSensor : ElecApparentPowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L1" }

// Sensor for line 2 AC electric apparent power
ElecL2ApparentPowerSensor : ElecApparentPowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L2" }

// Sensor for line 3 AC electric apparent power
ElecL3ApparentPowerSensor : ElecApparentPowerSensor & ElecPhasePowerSensor <abstract> { phasePower: "L3" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the line location of AC electric power (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for line AC electric power
ElecLinePowerSensor : ElecPowerSensor & ElecAcSensor <abstract> { linePower: ElecLineToLine }

// Sensor for line 1 to line 2 AC electric active power
ElecL1L2ActivePowerSensor : ElecActivePowerSensor & ElecLinePowerSensor <abstract> { linePower: "L1-L2" }

// Sensor for line 2 to line 3 AC electric active power
ElecL2L3ActivePowerSensor : ElecActivePowerSensor & ElecLinePowerSensor <abstract> { linePower: "L2-L3" }

// Sensor for line 3 to line 1 AC electric active power
ElecL3L1ActivePowerSensor : ElecActivePowerSensor & ElecLinePowerSensor <abstract> { linePower: "L3-L1" }

// Sensor for line 1 to line 2 AC electric reactive power
ElecL1L2ReactivePowerSensor : ElecReactivePowerSensor & ElecLinePowerSensor <abstract> { linePower: "L1-L2" }

// Sensor for line 2 to line 3 AC electric reactive power
ElecL2L3ReactivePowerSensor : ElecReactivePowerSensor & ElecLinePowerSensor <abstract> { linePower: "L2-L3" }

// Sensor for line 3 to line 1 AC electric reactive power
ElecL3L1ReactivePowerSensor : ElecReactivePowerSensor & ElecLinePowerSensor <abstract> { linePower: "L3-L1" }

// Sensor for line 1 to line 2 AC electric apparent power
ElecL1L2ApparentPowerSensor : ElecApparentPowerSensor & ElecLinePowerSensor <abstract> { linePower: "L1-L2" }

// Sensor for line 2 to line 3 AC electric apparent power
ElecL2L3ApparentPowerSensor : ElecApparentPowerSensor & ElecLinePowerSensor <abstract> { linePower: "L2-L3" }

// Sensor for line 3 to line 1 AC electric apparent power
ElecL3L1ApparentPowerSensor : ElecApparentPowerSensor & ElecLinePowerSensor <abstract> { linePower: "L3-L1" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the aggregate location of AC electric power (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for line average AC electric active power
ElecLineAvgActivePowerSensor : ElecActivePowerSensor <abstract> { lineAvg }

// Sensor for phase average AC electric active power
ElecPhaseAvgActivePowerSensor : ElecActivePowerSensor <abstract> { phaseAvg }

// Sensor for total AC electric active power
ElecTotalActivePowerSensor : ElecActivePowerSensor <abstract> { total }

// Sensor for line average AC electric reactive power
ElecLineAvgReactivePowerSensor : ElecReactivePowerSensor <abstract> { lineAvg }

// Sensor for phase average AC electric reactive power
ElecPhaseAvgReactivePowerSensor : ElecReactivePowerSensor <abstract> { phaseAvg }

// Sensor for total AC electric reactive power
ElecTotalReactivePowerSensor : ElecReactivePowerSensor <abstract> { total }

// Sensor for line average AC electric apparent power
ElecLineAvgApparentPowerSensor : ElecApparentPowerSensor <abstract> { lineAvg }

// Sensor for phase average AC electric apparent power
ElecPhaseAvgApparentPowerSensor : ElecApparentPowerSensor <abstract> { phaseAvg }

// Sensor for total AC electric apparent power
ElecTotalApparentPowerSensor : ElecApparentPowerSensor <abstract> { total }

//////////////////////////////////////////////////////////////////////////
// Sensors for the direction of AC electric power (leaves)
//////////////////////////////////////////////////////////////////////////

// Sensor for line 1 import of AC electric active power
ElecImportL1ActivePowerSensor : ElecL1ActivePowerSensor { import }

// Sensor for line 1 export of AC electric active power
ElecExportL1ActivePowerSensor : ElecL1ActivePowerSensor { export }

// Sensor for line 1 net of AC electric active power
ElecNetL1ActivePowerSensor : ElecL1ActivePowerSensor { net }

// Sensor for line 2 import of AC electric active power
ElecImportL2ActivePowerSensor : ElecL2ActivePowerSensor { import }

// Sensor for line 2 export of AC electric active power
ElecExportL2ActivePowerSensor : ElecL2ActivePowerSensor { export }

// Sensor for line 2 net of AC electric active power
ElecNetL2ActivePowerSensor : ElecL2ActivePowerSensor { net }

// Sensor for line 3 import of AC electric active power
ElecImportL3ActivePowerSensor : ElecL3ActivePowerSensor { import }

// Sensor for line 3 export of AC electric active power
ElecExportL3ActivePowerSensor : ElecL3ActivePowerSensor { export }

// Sensor for line 3 net of AC electric active power
ElecNetL3ActivePowerSensor : ElecL3ActivePowerSensor { net }

// Sensor for line 1 import of AC electric reactive power
ElecImportL1ReactivePowerSensor : ElecL1ReactivePowerSensor { import }

// Sensor for line 1 export of AC electric reactive power
ElecExportL1ReactivePowerSensor : ElecL1ReactivePowerSensor { export }

// Sensor for line 1 net of AC electric reactive power
ElecNetL1ReactivePowerSensor : ElecL1ReactivePowerSensor { net }

// Sensor for line 2 import of AC electric reactive power
ElecImportL2ReactivePowerSensor : ElecL2ReactivePowerSensor { import }

// Sensor for line 2 export of AC electric reactive power
ElecExportL2ReactivePowerSensor : ElecL2ReactivePowerSensor { export }

// Sensor for line 2 net of AC electric reactive power
ElecNetL2ReactivePowerSensor : ElecL2ReactivePowerSensor { net }

// Sensor for line 3 import of AC electric reactive power
ElecImportL3ReactivePowerSensor : ElecL3ReactivePowerSensor { import }

// Sensor for line 3 export of AC electric reactive power
ElecExportL3ReactivePowerSensor : ElecL3ReactivePowerSensor { export }

// Sensor for line 3 net of AC electric reactive power
ElecNetL3ReactivePowerSensor : ElecL3ReactivePowerSensor { net }

// Sensor for line 1 import of AC electric apparent power
ElecImportL1ApparentPowerSensor : ElecL1ApparentPowerSensor { import }

// Sensor for line 1 export of AC electric apparent power
ElecExportL1ApparentPowerSensor : ElecL1ApparentPowerSensor { export }

// Sensor for line 1 net of AC electric apparent power
ElecNetL1ApparentPowerSensor : ElecL1ApparentPowerSensor { net }

// Sensor for line 2 import of AC electric apparent power
ElecImportL2ApparentPowerSensor : ElecL2ApparentPowerSensor { import }

// Sensor for line 2 export of AC electric apparent power
ElecExportL2ApparentPowerSensor : ElecL2ApparentPowerSensor { export }

// Sensor for line 2 net of AC electric apparent power
ElecNetL2ApparentPowerSensor : ElecL2ApparentPowerSensor { net }

// Sensor for line 3 import of AC electric apparent power
ElecImportL3ApparentPowerSensor : ElecL3ApparentPowerSensor { import }

// Sensor for line 3 export of AC electric apparent power
ElecExportL3ApparentPowerSensor : ElecL3ApparentPowerSensor { export }

// Sensor for line 3 net of AC electric apparent power
ElecNetL3ApparentPowerSensor : ElecL3ApparentPowerSensor { net }

// Sensor for line 1 to line 2 import of AC electric active power
ElecImportL1L2ActivePowerSensor : ElecL1L2ActivePowerSensor { import }

// Sensor for line 1 to line 2 export of AC electric active power
ElecExportL1L2ActivePowerSensor : ElecL1L2ActivePowerSensor { export }

// Sensor for line 1 to line 2 net of AC electric active power
ElecNetL1L2ActivePowerSensor : ElecL1L2ActivePowerSensor { net }

// Sensor for line 2 to line 3 import of AC electric active power
ElecImportL2L3ActivePowerSensor : ElecL2L3ActivePowerSensor { import }

// Sensor for line 2 to line 3 export of AC electric active power
ElecExportL2L3ActivePowerSensor : ElecL2L3ActivePowerSensor { export }

// Sensor for line 2 to line 3 net of AC electric active power
ElecNetL2L3ActivePowerSensor : ElecL2L3ActivePowerSensor { net }

// Sensor for line 3 to line 1 import of AC electric active power
ElecImportL3L1ActivePowerSensor : ElecL3L1ActivePowerSensor { import }

// Sensor for line 3 to line 1 export of AC electric active power
ElecExportL3L1ActivePowerSensor : ElecL3L1ActivePowerSensor { export }

// Sensor for line 3 to line 1 net of AC electric active power
ElecNetL3L1ActivePowerSensor : ElecL3L1ActivePowerSensor { net }

// Sensor for line 1 to line 2 import of AC electric reactive power
ElecImportL1L2ReactivePowerSensor : ElecL1L2ReactivePowerSensor { import }

// Sensor for line 1 to line 2 export of AC electric reactive power
ElecExportL1L2ReactivePowerSensor : ElecL1L2ReactivePowerSensor { export }

// Sensor for line 1 to line 2 net of AC electric reactive power
ElecNetL1L2ReactivePowerSensor : ElecL1L2ReactivePowerSensor { net }

// Sensor for line 2 to line 3 import of AC electric reactive power
ElecImportL2L3ReactivePowerSensor : ElecL2L3ReactivePowerSensor { import }

// Sensor for line 2 to line 3 export of AC electric reactive power
ElecExportL2L3ReactivePowerSensor : ElecL2L3ReactivePowerSensor { export }

// Sensor for line 2 to line 3 net of AC electric reactive power
ElecNetL2L3ReactivePowerSensor : ElecL2L3ReactivePowerSensor { net }

// Sensor for line 3 to line 1 import of AC electric reactive power
ElecImportL3L1ReactivePowerSensor : ElecL3L1ReactivePowerSensor { import }

// Sensor for line 3 to line 1 export of AC electric reactive power
ElecExportL3L1ReactivePowerSensor : ElecL3L1ReactivePowerSensor { export }

// Sensor for line 3 to line 1 net of AC electric reactive power
ElecNetL3L1ReactivePowerSensor : ElecL3L1ReactivePowerSensor { net }

// Sensor for line 1 to line 2 import of AC electric apparent power
ElecImportL1L2ApparentPowerSensor : ElecL1L2ApparentPowerSensor { import }

// Sensor for line 1 to line 2 export of AC electric apparent power
ElecExportL1L2ApparentPowerSensor : ElecL1L2ApparentPowerSensor { export }

// Sensor for line 1 to line 2 net of AC electric apparent power
ElecNetL1L2ApparentPowerSensor : ElecL1L2ApparentPowerSensor { net }

// Sensor for line 2 to line 3 import of AC electric apparent power
ElecImportL2L3ApparentPowerSensor : ElecL2L3ApparentPowerSensor { import }

// Sensor for line 2 to line 3 export of AC electric apparent power
ElecExportL2L3ApparentPowerSensor : ElecL2L3ApparentPowerSensor { export }

// Sensor for line 2 to line 3 net of AC electric apparent power
ElecNetL2L3ApparentPowerSensor : ElecL2L3ApparentPowerSensor { net }

// Sensor for line 3 to line 1 import of AC electric apparent power
ElecImportL3L1ApparentPowerSensor : ElecL3L1ApparentPowerSensor { import }

// Sensor for line 3 to line 1 export of AC electric apparent power
ElecExportL3L1ApparentPowerSensor : ElecL3L1ApparentPowerSensor { export }

// Sensor for line 3 to line 1 net of AC electric apparent power
ElecNetL3L1ApparentPowerSensor : ElecL3L1ApparentPowerSensor { net }

// Sensor for line average import of AC electric active power
ElecImportLineAvgActivePowerSensor : ElecLineAvgActivePowerSensor { import }

// Sensor for line average export of AC electric active power
ElecExportLineAvgActivePowerSensor : ElecLineAvgActivePowerSensor { export }

// Sensor for line average net of AC electric active power
ElecNetLineAvgActivePowerSensor : ElecLineAvgActivePowerSensor { net }

// Sensor for phase average import of AC electric active power
ElecImportPhaseAvgActivePowerSensor : ElecPhaseAvgActivePowerSensor { import }

// Sensor for phase average export of AC electric active power
ElecExportPhaseAvgActivePowerSensor : ElecPhaseAvgActivePowerSensor { export }

// Sensor for phase average net of AC electric active power
ElecNetPhaseAvgActivePowerSensor : ElecPhaseAvgActivePowerSensor { net }

// Sensor for total import of AC electric active power
ElecImportTotalActivePowerSensor : ElecTotalActivePowerSensor { import }

// Sensor for total export of AC electric active power
ElecExportTotalActivePowerSensor : ElecTotalActivePowerSensor { export }

// Sensor for total net of AC electric active power
ElecNetTotalActivePowerSensor : ElecTotalActivePowerSensor { net }

// Sensor for line average import of AC electric reactive power
ElecImportLineAvgReactivePowerSensor : ElecLineAvgReactivePowerSensor { import }

// Sensor for line average export of AC electric reactive power
ElecExportLineAvgReactivePowerSensor : ElecLineAvgReactivePowerSensor { export }

// Sensor for line average net of AC electric reactive power
ElecNetLineAvgReactivePowerSensor : ElecLineAvgReactivePowerSensor { net }

// Sensor for phase average import of AC electric reactive power
ElecImportPhaseAvgReactivePowerSensor : ElecPhaseAvgReactivePowerSensor { import }

// Sensor for phase average export of AC electric reactive power
ElecExportPhaseAvgReactivePowerSensor : ElecPhaseAvgReactivePowerSensor { export }

// Sensor for phase average net of AC electric reactive power
ElecNetPhaseAvgReactivePowerSensor : ElecPhaseAvgReactivePowerSensor { net }

// Sensor for total import of AC electric reactive power
ElecImportTotalReactivePowerSensor : ElecTotalReactivePowerSensor { import }

// Sensor for total export of AC electric reactive power
ElecExportTotalReactivePowerSensor : ElecTotalReactivePowerSensor { export }

// Sensor for total net of AC electric reactive power
ElecNetTotalReactivePowerSensor : ElecTotalReactivePowerSensor { net }

// Sensor for line average import of AC electric apparent power
ElecImportLineAvgApparentPowerSensor : ElecLineAvgApparentPowerSensor { import }

// Sensor for line average export of AC electric apparent power
ElecExportLineAvgApparentPowerSensor : ElecLineAvgApparentPowerSensor { export }

// Sensor for line average net of AC electric apparent power
ElecNetLineAvgApparentPowerSensor : ElecLineAvgApparentPowerSensor { net }

// Sensor for phase average import of AC electric apparent power
ElecImportPhaseAvgApparentPowerSensor : ElecPhaseAvgApparentPowerSensor { import }

// Sensor for phase average export of AC electric apparent power
ElecExportPhaseAvgApparentPowerSensor : ElecPhaseAvgApparentPowerSensor { export }

// Sensor for phase average net of AC electric apparent power
ElecNetPhaseAvgApparentPowerSensor : ElecPhaseAvgApparentPowerSensor { net }

// Sensor for total import of AC electric apparent power
ElecImportTotalApparentPowerSensor : ElecTotalApparentPowerSensor { import }

// Sensor for total export of AC electric apparent power
ElecExportTotalApparentPowerSensor : ElecTotalApparentPowerSensor { export }

// Sensor for total net of AC electric apparent power
ElecNetTotalApparentPowerSensor : ElecTotalApparentPowerSensor { net }

//////////////////////////////////////////////////////////////////////////
// Setpoints for AC power subtypes (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for maximum AC active power
ElecActivePowerMaxSp : ElecPowerMaxSp & ElecAcSp <abstract> { active }

// Setpoint for maximum AC reactive power
ElecReactivePowerMaxSp : ElecPowerMaxSp & ElecAcSp <abstract> { reactive }

// Setpoint for maximum AC apparent power
ElecApparentPowerMaxSp : ElecPowerMaxSp & ElecAcSp <abstract> { apparent }

//////////////////////////////////////////////////////////////////////////
// Setpoints for the phase location of AC electric power (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for phase maximum AC electric power
ElecPhasePowerMaxSp : ElecPowerMaxSp & ElecAcSp <abstract> { phasePower: ElecLine }

// Setpoint for line 1 maximum AC electric active power
ElecL1ActivePowerMaxSp : ElecActivePowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L1" }

// Setpoint for line 2 maximum AC electric active power
ElecL2ActivePowerMaxSp : ElecActivePowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L2" }

// Setpoint for line 3 maximum AC electric active power
ElecL3ActivePowerMaxSp : ElecActivePowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L3" }

// Setpoint for line 1 maximum AC electric reactive power
ElecL1ReactivePowerMaxSp : ElecReactivePowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L1" }

// Setpoint for line 2 maximum AC electric reactive power
ElecL2ReactivePowerMaxSp : ElecReactivePowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L2" }

// Setpoint for line 3 maximum AC electric reactive power
ElecL3ReactivePowerMaxSp : ElecReactivePowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L3" }

// Setpoint for line 1 maximum AC electric apparent power
ElecL1ApparentPowerMaxSp : ElecApparentPowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L1" }

// Setpoint for line 2 maximum AC electric apparent power
ElecL2ApparentPowerMaxSp : ElecApparentPowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L2" }

// Setpoint for line 3 maximum AC electric apparent power
ElecL3ApparentPowerMaxSp : ElecApparentPowerMaxSp & ElecPhasePowerMaxSp <abstract> { phasePower: "L3" }

//////////////////////////////////////////////////////////////////////////
// Setpoints for the line location of AC electric power (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for line maximum AC electric power
ElecLinePowerMaxSp : ElecPowerMaxSp & ElecAcSp <abstract> { linePower: ElecLineToLine }

// Setpoint for line 1 to line 2 maximum AC electric active power
ElecL1L2ActivePowerMaxSp : ElecActivePowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L1-L2" }

// Setpoint for line 2 to line 3 maximum AC electric active power
ElecL2L3ActivePowerMaxSp : ElecActivePowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L2-L3" }

// Setpoint for line 3 to line 1 maximum AC electric active power
ElecL3L1ActivePowerMaxSp : ElecActivePowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L3-L1" }

// Setpoint for line 1 to line 2 maximum AC electric reactive power
ElecL1L2ReactivePowerMaxSp : ElecReactivePowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L1-L2" }

// Setpoint for line 2 to line 3 maximum AC electric reactive power
ElecL2L3ReactivePowerMaxSp : ElecReactivePowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L2-L3" }

// Setpoint for line 3 to line 1 maximum AC electric reactive power
ElecL3L1ReactivePowerMaxSp : ElecReactivePowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L3-L1" }

// Setpoint for line 1 to line 2 maximum AC electric apparent power
ElecL1L2ApparentPowerMaxSp : ElecApparentPowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L1-L2" }

// Setpoint for line 2 to line 3 maximum AC electric apparent power
ElecL2L3ApparentPowerMaxSp : ElecApparentPowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L2-L3" }

// Setpoint for line 3 to line 1 maximum AC electric apparent power
ElecL3L1ApparentPowerMaxSp : ElecApparentPowerMaxSp & ElecLinePowerMaxSp <abstract> { linePower: "L3-L1" }

//////////////////////////////////////////////////////////////////////////
// Setpoints for the aggregate location of AC electric power (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for total maximum AC electric active power
ElecTotalActivePowerMaxSp : ElecActivePowerMaxSp <abstract> { total }

// Setpoint for total maximum AC electric reactive power
ElecTotalReactivePowerMaxSp : ElecReactivePowerMaxSp <abstract> { total }

// Setpoint for total maximum AC electric apparent power
ElecTotalApparentPowerMaxSp : ElecApparentPowerMaxSp <abstract> { total }

//////////////////////////////////////////////////////////////////////////
// Setpoints for the direction of AC electric power (leaves)
//////////////////////////////////////////////////////////////////////////

// Setpoint for line 1 import of maximum AC electric active power
ElecImportL1ActivePowerMaxSp : ElecL1ActivePowerMaxSp { import }

// Setpoint for line 1 export of maximum AC electric active power
ElecExportL1ActivePowerMaxSp : ElecL1ActivePowerMaxSp { export }

// Setpoint for line 1 net of maximum AC electric active power
ElecNetL1ActivePowerMaxSp : ElecL1ActivePowerMaxSp { net }

// Setpoint for line 2 import of maximum AC electric active power
ElecImportL2ActivePowerMaxSp : ElecL2ActivePowerMaxSp { import }

// Setpoint for line 2 export of maximum AC electric active power
ElecExportL2ActivePowerMaxSp : ElecL2ActivePowerMaxSp { export }

// Setpoint for line 2 net of maximum AC electric active power
ElecNetL2ActivePowerMaxSp : ElecL2ActivePowerMaxSp { net }

// Setpoint for line 3 import of maximum AC electric active power
ElecImportL3ActivePowerMaxSp : ElecL3ActivePowerMaxSp { import }

// Setpoint for line 3 export of maximum AC electric active power
ElecExportL3ActivePowerMaxSp : ElecL3ActivePowerMaxSp { export }

// Setpoint for line 3 net of maximum AC electric active power
ElecNetL3ActivePowerMaxSp : ElecL3ActivePowerMaxSp { net }

// Setpoint for line 1 import of maximum AC electric reactive power
ElecImportL1ReactivePowerMaxSp : ElecL1ReactivePowerMaxSp { import }

// Setpoint for line 1 export of maximum AC electric reactive power
ElecExportL1ReactivePowerMaxSp : ElecL1ReactivePowerMaxSp { export }

// Setpoint for line 1 net of maximum AC electric reactive power
ElecNetL1ReactivePowerMaxSp : ElecL1ReactivePowerMaxSp { net }

// Setpoint for line 2 import of maximum AC electric reactive power
ElecImportL2ReactivePowerMaxSp : ElecL2ReactivePowerMaxSp { import }

// Setpoint for line 2 export of maximum AC electric reactive power
ElecExportL2ReactivePowerMaxSp : ElecL2ReactivePowerMaxSp { export }

// Setpoint for line 2 net of maximum AC electric reactive power
ElecNetL2ReactivePowerMaxSp : ElecL2ReactivePowerMaxSp { net }

// Setpoint for line 3 import of maximum AC electric reactive power
ElecImportL3ReactivePowerMaxSp : ElecL3ReactivePowerMaxSp { import }

// Setpoint for line 3 export of maximum AC electric reactive power
ElecExportL3ReactivePowerMaxSp : ElecL3ReactivePowerMaxSp { export }

// Setpoint for line 3 net of maximum AC electric reactive power
ElecNetL3ReactivePowerMaxSp : ElecL3ReactivePowerMaxSp { net }

// Setpoint for line 1 import of maximum AC electric apparent power
ElecImportL1ApparentPowerMaxSp : ElecL1ApparentPowerMaxSp { import }

// Setpoint for line 1 export of maximum AC electric apparent power
ElecExportL1ApparentPowerMaxSp : ElecL1ApparentPowerMaxSp { export }

// Setpoint for line 1 net of maximum AC electric apparent power
ElecNetL1ApparentPowerMaxSp : ElecL1ApparentPowerMaxSp { net }

// Setpoint for line 2 import of maximum AC electric apparent power
ElecImportL2ApparentPowerMaxSp : ElecL2ApparentPowerMaxSp { import }

// Setpoint for line 2 export of maximum AC electric apparent power
ElecExportL2ApparentPowerMaxSp : ElecL2ApparentPowerMaxSp { export }

// Setpoint for line 2 net of maximum AC electric apparent power
ElecNetL2ApparentPowerMaxSp : ElecL2ApparentPowerMaxSp { net }

// Setpoint for line 3 import of maximum AC electric apparent power
ElecImportL3ApparentPowerMaxSp : ElecL3ApparentPowerMaxSp { import }

// Setpoint for line 3 export of maximum AC electric apparent power
ElecExportL3ApparentPowerMaxSp : ElecL3ApparentPowerMaxSp { export }

// Setpoint for line 3 net of maximum AC electric apparent power
ElecNetL3ApparentPowerMaxSp : ElecL3ApparentPowerMaxSp { net }

// Setpoint for line 1 to line 2 import of maximum AC electric active power
ElecImportL1L2ActivePowerMaxSp : ElecL1L2ActivePowerMaxSp { import }

// Setpoint for line 1 to line 2 export of maximum AC electric active power
ElecExportL1L2ActivePowerMaxSp : ElecL1L2ActivePowerMaxSp { export }

// Setpoint for line 1 to line 2 net of maximum AC electric active power
ElecNetL1L2ActivePowerMaxSp : ElecL1L2ActivePowerMaxSp { net }

// Setpoint for line 2 to line 3 import of maximum AC electric active power
ElecImportL2L3ActivePowerMaxSp : ElecL2L3ActivePowerMaxSp { import }

// Setpoint for line 2 to line 3 export of maximum AC electric active power
ElecExportL2L3ActivePowerMaxSp : ElecL2L3ActivePowerMaxSp { export }

// Setpoint for line 2 to line 3 net of maximum AC electric active power
ElecNetL2L3ActivePowerMaxSp : ElecL2L3ActivePowerMaxSp { net }

// Setpoint for line 3 to line 1 import of maximum AC electric active power
ElecImportL3L1ActivePowerMaxSp : ElecL3L1ActivePowerMaxSp { import }

// Setpoint for line 3 to line 1 export of maximum AC electric active power
ElecExportL3L1ActivePowerMaxSp : ElecL3L1ActivePowerMaxSp { export }

// Setpoint for line 3 to line 1 net of maximum AC electric active power
ElecNetL3L1ActivePowerMaxSp : ElecL3L1ActivePowerMaxSp { net }

// Setpoint for line 1 to line 2 import of maximum AC electric reactive power
ElecImportL1L2ReactivePowerMaxSp : ElecL1L2ReactivePowerMaxSp { import }

// Setpoint for line 1 to line 2 export of maximum AC electric reactive power
ElecExportL1L2ReactivePowerMaxSp : ElecL1L2ReactivePowerMaxSp { export }

// Setpoint for line 1 to line 2 net of maximum AC electric reactive power
ElecNetL1L2ReactivePowerMaxSp : ElecL1L2ReactivePowerMaxSp { net }

// Setpoint for line 2 to line 3 import of maximum AC electric reactive power
ElecImportL2L3ReactivePowerMaxSp : ElecL2L3ReactivePowerMaxSp { import }

// Setpoint for line 2 to line 3 export of maximum AC electric reactive power
ElecExportL2L3ReactivePowerMaxSp : ElecL2L3ReactivePowerMaxSp { export }

// Setpoint for line 2 to line 3 net of maximum AC electric reactive power
ElecNetL2L3ReactivePowerMaxSp : ElecL2L3ReactivePowerMaxSp { net }

// Setpoint for line 3 to line 1 import of maximum AC electric reactive power
ElecImportL3L1ReactivePowerMaxSp : ElecL3L1ReactivePowerMaxSp { import }

// Setpoint for line 3 to line 1 export of maximum AC electric reactive power
ElecExportL3L1ReactivePowerMaxSp : ElecL3L1ReactivePowerMaxSp { export }

// Setpoint for line 3 to line 1 net of maximum AC electric reactive power
ElecNetL3L1ReactivePowerMaxSp : ElecL3L1ReactivePowerMaxSp { net }

// Setpoint for line 1 to line 2 import of maximum AC electric apparent power
ElecImportL1L2ApparentPowerMaxSp : ElecL1L2ApparentPowerMaxSp { import }

// Setpoint for line 1 to line 2 export of maximum AC electric apparent power
ElecExportL1L2ApparentPowerMaxSp : ElecL1L2ApparentPowerMaxSp { export }

// Setpoint for line 1 to line 2 net of maximum AC electric apparent power
ElecNetL1L2ApparentPowerMaxSp : ElecL1L2ApparentPowerMaxSp { net }

// Setpoint for line 2 to line 3 import of maximum AC electric apparent power
ElecImportL2L3ApparentPowerMaxSp : ElecL2L3ApparentPowerMaxSp { import }

// Setpoint for line 2 to line 3 export of maximum AC electric apparent power
ElecExportL2L3ApparentPowerMaxSp : ElecL2L3ApparentPowerMaxSp { export }

// Setpoint for line 2 to line 3 net of maximum AC electric apparent power
ElecNetL2L3ApparentPowerMaxSp : ElecL2L3ApparentPowerMaxSp { net }

// Setpoint for line 3 to line 1 import of maximum AC electric apparent power
ElecImportL3L1ApparentPowerMaxSp : ElecL3L1ApparentPowerMaxSp { import }

// Setpoint for line 3 to line 1 export of maximum AC electric apparent power
ElecExportL3L1ApparentPowerMaxSp : ElecL3L1ApparentPowerMaxSp { export }

// Setpoint for line 3 to line 1 net of maximum AC electric apparent power
ElecNetL3L1ApparentPowerMaxSp : ElecL3L1ApparentPowerMaxSp { net }

// Setpoint for total import of maximum AC electric active power
ElecImportTotalActivePowerMaxSp : ElecTotalActivePowerMaxSp { import }

// Setpoint for total export of maximum AC electric active power
ElecExportTotalActivePowerMaxSp : ElecTotalActivePowerMaxSp { export }

// Setpoint for total net of maximum AC electric active power
ElecNetTotalActivePowerMaxSp : ElecTotalActivePowerMaxSp { net }

// Setpoint for total import of maximum AC electric reactive power
ElecImportTotalReactivePowerMaxSp : ElecTotalReactivePowerMaxSp { import }

// Setpoint for total export of maximum AC electric reactive power
ElecExportTotalReactivePowerMaxSp : ElecTotalReactivePowerMaxSp { export }

// Setpoint for total net of maximum AC electric reactive power
ElecNetTotalReactivePowerMaxSp : ElecTotalReactivePowerMaxSp { net }

// Setpoint for total import of maximum AC electric apparent power
ElecImportTotalApparentPowerMaxSp : ElecTotalApparentPowerMaxSp { import }

// Setpoint for total export of maximum AC electric apparent power
ElecExportTotalApparentPowerMaxSp : ElecTotalApparentPowerMaxSp { export }

// Setpoint for total net of maximum AC electric apparent power
ElecNetTotalApparentPowerMaxSp : ElecTotalApparentPowerMaxSp { net }

//////////////////////////////////////////////////////////////////////////
// Sensors for AC energy subtypes (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for AC active energy
ElecActiveEnergySensor : ElecEnergySensor & ElecAcSensor <abstract> { active }

// Sensor for AC reactive energy
ElecReactiveEnergySensor : ElecEnergySensor & ElecAcSensor <abstract> { reactive }

// Sensor for AC apparent energy
ElecApparentEnergySensor : ElecEnergySensor & ElecAcSensor <abstract> { apparent }

//////////////////////////////////////////////////////////////////////////
// Sensors for the phase location of AC electric energy (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for phase AC electric energy
ElecPhaseEnergySensor : ElecEnergySensor & ElecAcSensor <abstract> { phaseEnergy: ElecLine }

// Sensor for line 1 AC electric active energy
ElecL1ActiveEnergySensor : ElecActiveEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L1" }

// Sensor for line 2 AC electric active energy
ElecL2ActiveEnergySensor : ElecActiveEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L2" }

// Sensor for line 3 AC electric active energy
ElecL3ActiveEnergySensor : ElecActiveEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L3" }

// Sensor for line 1 AC electric reactive energy
ElecL1ReactiveEnergySensor : ElecReactiveEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L1" }

// Sensor for line 2 AC electric reactive energy
ElecL2ReactiveEnergySensor : ElecReactiveEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L2" }

// Sensor for line 3 AC electric reactive energy
ElecL3ReactiveEnergySensor : ElecReactiveEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L3" }

// Sensor for line 1 AC electric apparent energy
ElecL1ApparentEnergySensor : ElecApparentEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L1" }

// Sensor for line 2 AC electric apparent energy
ElecL2ApparentEnergySensor : ElecApparentEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L2" }

// Sensor for line 3 AC electric apparent energy
ElecL3ApparentEnergySensor : ElecApparentEnergySensor & ElecPhaseEnergySensor <abstract> { phaseEnergy: "L3" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the line location of AC electric energy (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for line AC electric energy
ElecLineEnergySensor : ElecEnergySensor & ElecAcSensor <abstract> { lineEnergy: ElecLineToLine }

// Sensor for line 1 to line 2 AC electric active energy
ElecL1L2ActiveEnergySensor : ElecActiveEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L1-L2" }

// Sensor for line 2 to line 3 AC electric active energy
ElecL2L3ActiveEnergySensor : ElecActiveEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L2-L3" }

// Sensor for line 3 to line 1 AC electric active energy
ElecL3L1ActiveEnergySensor : ElecActiveEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L3-L1" }

// Sensor for line 1 to line 2 AC electric reactive energy
ElecL1L2ReactiveEnergySensor : ElecReactiveEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L1-L2" }

// Sensor for line 2 to line 3 AC electric reactive energy
ElecL2L3ReactiveEnergySensor : ElecReactiveEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L2-L3" }

// Sensor for line 3 to line 1 AC electric reactive energy
ElecL3L1ReactiveEnergySensor : ElecReactiveEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L3-L1" }

// Sensor for line 1 to line 2 AC electric apparent energy
ElecL1L2ApparentEnergySensor : ElecApparentEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L1-L2" }

// Sensor for line 2 to line 3 AC electric apparent energy
ElecL2L3ApparentEnergySensor : ElecApparentEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L2-L3" }

// Sensor for line 3 to line 1 AC electric apparent energy
ElecL3L1ApparentEnergySensor : ElecApparentEnergySensor & ElecLineEnergySensor <abstract> { lineEnergy: "L3-L1" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the aggregate location of AC electric energy (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for total AC electric active energy
ElecTotalActiveEnergySensor : ElecActiveEnergySensor <abstract> { total }

// Sensor for avg AC electric active energy
ElecAvgActiveEnergySensor : ElecActiveEnergySensor <abstract> { avg }

// Sensor for total AC electric reactive energy
ElecTotalReactiveEnergySensor : ElecReactiveEnergySensor <abstract> { total }

// Sensor for avg AC electric reactive energy
ElecAvgReactiveEnergySensor : ElecReactiveEnergySensor <abstract> { avg }

// Sensor for total AC electric apparent energy
ElecTotalApparentEnergySensor : ElecApparentEnergySensor <abstract> { total }

// Sensor for avg AC electric apparent energy
ElecAvgApparentEnergySensor : ElecApparentEnergySensor <abstract> { avg }

//////////////////////////////////////////////////////////////////////////
// Sensors for the direction of AC electric energy (leaves)
//////////////////////////////////////////////////////////////////////////

// Sensor for line 1 import of AC electric active energy
ElecImportL1ActiveEnergySensor : ElecL1ActiveEnergySensor { import }

// Sensor for line 1 export of AC electric active energy
ElecExportL1ActiveEnergySensor : ElecL1ActiveEnergySensor { export }

// Sensor for line 1 net of AC electric active energy
ElecNetL1ActiveEnergySensor : ElecL1ActiveEnergySensor { net }

// Sensor for line 2 import of AC electric active energy
ElecImportL2ActiveEnergySensor : ElecL2ActiveEnergySensor { import }

// Sensor for line 2 export of AC electric active energy
ElecExportL2ActiveEnergySensor : ElecL2ActiveEnergySensor { export }

// Sensor for line 2 net of AC electric active energy
ElecNetL2ActiveEnergySensor : ElecL2ActiveEnergySensor { net }

// Sensor for line 3 import of AC electric active energy
ElecImportL3ActiveEnergySensor : ElecL3ActiveEnergySensor { import }

// Sensor for line 3 export of AC electric active energy
ElecExportL3ActiveEnergySensor : ElecL3ActiveEnergySensor { export }

// Sensor for line 3 net of AC electric active energy
ElecNetL3ActiveEnergySensor : ElecL3ActiveEnergySensor { net }

// Sensor for line 1 import of AC electric reactive energy
ElecImportL1ReactiveEnergySensor : ElecL1ReactiveEnergySensor { import }

// Sensor for line 1 export of AC electric reactive energy
ElecExportL1ReactiveEnergySensor : ElecL1ReactiveEnergySensor { export }

// Sensor for line 1 net of AC electric reactive energy
ElecNetL1ReactiveEnergySensor : ElecL1ReactiveEnergySensor { net }

// Sensor for line 2 import of AC electric reactive energy
ElecImportL2ReactiveEnergySensor : ElecL2ReactiveEnergySensor { import }

// Sensor for line 2 export of AC electric reactive energy
ElecExportL2ReactiveEnergySensor : ElecL2ReactiveEnergySensor { export }

// Sensor for line 2 net of AC electric reactive energy
ElecNetL2ReactiveEnergySensor : ElecL2ReactiveEnergySensor { net }

// Sensor for line 3 import of AC electric reactive energy
ElecImportL3ReactiveEnergySensor : ElecL3ReactiveEnergySensor { import }

// Sensor for line 3 export of AC electric reactive energy
ElecExportL3ReactiveEnergySensor : ElecL3ReactiveEnergySensor { export }

// Sensor for line 3 net of AC electric reactive energy
ElecNetL3ReactiveEnergySensor : ElecL3ReactiveEnergySensor { net }

// Sensor for line 1 import of AC electric apparent energy
ElecImportL1ApparentEnergySensor : ElecL1ApparentEnergySensor { import }

// Sensor for line 1 export of AC electric apparent energy
ElecExportL1ApparentEnergySensor : ElecL1ApparentEnergySensor { export }

// Sensor for line 1 net of AC electric apparent energy
ElecNetL1ApparentEnergySensor : ElecL1ApparentEnergySensor { net }

// Sensor for line 2 import of AC electric apparent energy
ElecImportL2ApparentEnergySensor : ElecL2ApparentEnergySensor { import }

// Sensor for line 2 export of AC electric apparent energy
ElecExportL2ApparentEnergySensor : ElecL2ApparentEnergySensor { export }

// Sensor for line 2 net of AC electric apparent energy
ElecNetL2ApparentEnergySensor : ElecL2ApparentEnergySensor { net }

// Sensor for line 3 import of AC electric apparent energy
ElecImportL3ApparentEnergySensor : ElecL3ApparentEnergySensor { import }

// Sensor for line 3 export of AC electric apparent energy
ElecExportL3ApparentEnergySensor : ElecL3ApparentEnergySensor { export }

// Sensor for line 3 net of AC electric apparent energy
ElecNetL3ApparentEnergySensor : ElecL3ApparentEnergySensor { net }

// Sensor for line 1 to line 2 import of AC electric active energy
ElecImportL1L2ActiveEnergySensor : ElecL1L2ActiveEnergySensor { import }

// Sensor for line 1 to line 2 export of AC electric active energy
ElecExportL1L2ActiveEnergySensor : ElecL1L2ActiveEnergySensor { export }

// Sensor for line 1 to line 2 net of AC electric active energy
ElecNetL1L2ActiveEnergySensor : ElecL1L2ActiveEnergySensor { net }

// Sensor for line 2 to line 3 import of AC electric active energy
ElecImportL2L3ActiveEnergySensor : ElecL2L3ActiveEnergySensor { import }

// Sensor for line 2 to line 3 export of AC electric active energy
ElecExportL2L3ActiveEnergySensor : ElecL2L3ActiveEnergySensor { export }

// Sensor for line 2 to line 3 net of AC electric active energy
ElecNetL2L3ActiveEnergySensor : ElecL2L3ActiveEnergySensor { net }

// Sensor for line 3 to line 1 import of AC electric active energy
ElecImportL3L1ActiveEnergySensor : ElecL3L1ActiveEnergySensor { import }

// Sensor for line 3 to line 1 export of AC electric active energy
ElecExportL3L1ActiveEnergySensor : ElecL3L1ActiveEnergySensor { export }

// Sensor for line 3 to line 1 net of AC electric active energy
ElecNetL3L1ActiveEnergySensor : ElecL3L1ActiveEnergySensor { net }

// Sensor for line 1 to line 2 import of AC electric reactive energy
ElecImportL1L2ReactiveEnergySensor : ElecL1L2ReactiveEnergySensor { import }

// Sensor for line 1 to line 2 export of AC electric reactive energy
ElecExportL1L2ReactiveEnergySensor : ElecL1L2ReactiveEnergySensor { export }

// Sensor for line 1 to line 2 net of AC electric reactive energy
ElecNetL1L2ReactiveEnergySensor : ElecL1L2ReactiveEnergySensor { net }

// Sensor for line 2 to line 3 import of AC electric reactive energy
ElecImportL2L3ReactiveEnergySensor : ElecL2L3ReactiveEnergySensor { import }

// Sensor for line 2 to line 3 export of AC electric reactive energy
ElecExportL2L3ReactiveEnergySensor : ElecL2L3ReactiveEnergySensor { export }

// Sensor for line 2 to line 3 net of AC electric reactive energy
ElecNetL2L3ReactiveEnergySensor : ElecL2L3ReactiveEnergySensor { net }

// Sensor for line 3 to line 1 import of AC electric reactive energy
ElecImportL3L1ReactiveEnergySensor : ElecL3L1ReactiveEnergySensor { import }

// Sensor for line 3 to line 1 export of AC electric reactive energy
ElecExportL3L1ReactiveEnergySensor : ElecL3L1ReactiveEnergySensor { export }

// Sensor for line 3 to line 1 net of AC electric reactive energy
ElecNetL3L1ReactiveEnergySensor : ElecL3L1ReactiveEnergySensor { net }

// Sensor for line 1 to line 2 import of AC electric apparent energy
ElecImportL1L2ApparentEnergySensor : ElecL1L2ApparentEnergySensor { import }

// Sensor for line 1 to line 2 export of AC electric apparent energy
ElecExportL1L2ApparentEnergySensor : ElecL1L2ApparentEnergySensor { export }

// Sensor for line 1 to line 2 net of AC electric apparent energy
ElecNetL1L2ApparentEnergySensor : ElecL1L2ApparentEnergySensor { net }

// Sensor for line 2 to line 3 import of AC electric apparent energy
ElecImportL2L3ApparentEnergySensor : ElecL2L3ApparentEnergySensor { import }

// Sensor for line 2 to line 3 export of AC electric apparent energy
ElecExportL2L3ApparentEnergySensor : ElecL2L3ApparentEnergySensor { export }

// Sensor for line 2 to line 3 net of AC electric apparent energy
ElecNetL2L3ApparentEnergySensor : ElecL2L3ApparentEnergySensor { net }

// Sensor for line 3 to line 1 import of AC electric apparent energy
ElecImportL3L1ApparentEnergySensor : ElecL3L1ApparentEnergySensor { import }

// Sensor for line 3 to line 1 export of AC electric apparent energy
ElecExportL3L1ApparentEnergySensor : ElecL3L1ApparentEnergySensor { export }

// Sensor for line 3 to line 1 net of AC electric apparent energy
ElecNetL3L1ApparentEnergySensor : ElecL3L1ApparentEnergySensor { net }

// Sensor for total import of AC electric active energy
ElecImportTotalActiveEnergySensor : ElecTotalActiveEnergySensor { import }

// Sensor for total export of AC electric active energy
ElecExportTotalActiveEnergySensor : ElecTotalActiveEnergySensor { export }

// Sensor for total net of AC electric active energy
ElecNetTotalActiveEnergySensor : ElecTotalActiveEnergySensor { net }

// Sensor for avg import of AC electric active energy
ElecImportAvgActiveEnergySensor : ElecAvgActiveEnergySensor { import }

// Sensor for avg export of AC electric active energy
ElecExportAvgActiveEnergySensor : ElecAvgActiveEnergySensor { export }

// Sensor for avg net of AC electric active energy
ElecNetAvgActiveEnergySensor : ElecAvgActiveEnergySensor { net }

// Sensor for total import of AC electric reactive energy
ElecImportTotalReactiveEnergySensor : ElecTotalReactiveEnergySensor { import }

// Sensor for total export of AC electric reactive energy
ElecExportTotalReactiveEnergySensor : ElecTotalReactiveEnergySensor { export }

// Sensor for total net of AC electric reactive energy
ElecNetTotalReactiveEnergySensor : ElecTotalReactiveEnergySensor { net }

// Sensor for avg import of AC electric reactive energy
ElecImportAvgReactiveEnergySensor : ElecAvgReactiveEnergySensor { import }

// Sensor for avg export of AC electric reactive energy
ElecExportAvgReactiveEnergySensor : ElecAvgReactiveEnergySensor { export }

// Sensor for avg net of AC electric reactive energy
ElecNetAvgReactiveEnergySensor : ElecAvgReactiveEnergySensor { net }

// Sensor for total import of AC electric apparent energy
ElecImportTotalApparentEnergySensor : ElecTotalApparentEnergySensor { import }

// Sensor for total export of AC electric apparent energy
ElecExportTotalApparentEnergySensor : ElecTotalApparentEnergySensor { export }

// Sensor for total net of AC electric apparent energy
ElecNetTotalApparentEnergySensor : ElecTotalApparentEnergySensor { net }

// Sensor for avg import of AC electric apparent energy
ElecImportAvgApparentEnergySensor : ElecAvgApparentEnergySensor { import }

// Sensor for avg export of AC electric apparent energy
ElecExportAvgApparentEnergySensor : ElecAvgApparentEnergySensor { export }

// Sensor for avg net of AC electric apparent energy
ElecNetAvgApparentEnergySensor : ElecAvgApparentEnergySensor { net }

//////////////////////////////////////////////////////////////////////////
// Sensors for AC current subtypes (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for AC magnitude current
ElecMagnitudeCurrentSensor : ElecCurrentSensor & ElecAcSensor <abstract> { magnitude }

// Sensor for AC angle current
ElecAngleCurrentSensor : ElecCurrentSensor & ElecAcSensor <abstract> { angle }

// Sensor for AC THD current
ElecThdCurrentSensor : ElecCurrentSensor & ElecAcSensor <abstract> { thd }

// Sensor for AC imbalance current
ElecImbalanceCurrentSensor : ElecCurrentSensor & ElecAcSensor <abstract> { imbalance }

//////////////////////////////////////////////////////////////////////////
// Sensors for the phase location of AC electric current (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for phase AC electric current
ElecPhaseCurrentSensor : ElecCurrentSensor & ElecAcSensor <abstract> { phaseCurrent: ElecLineToLine }

// Sensor for line 1 to line 2 AC electric magnitude current
ElecL1L2MagnitudeCurrentSensor : ElecMagnitudeCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L1-L2" }

// Sensor for line 2 to line 3 AC electric magnitude current
ElecL2L3MagnitudeCurrentSensor : ElecMagnitudeCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L2-L3" }

// Sensor for line 3 to line 1 AC electric magnitude current
ElecL3L1MagnitudeCurrentSensor : ElecMagnitudeCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L3-L1" }

// Sensor for line 1 to line 2 AC electric angle current
ElecL1L2AngleCurrentSensor : ElecAngleCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L1-L2" }

// Sensor for line 2 to line 3 AC electric angle current
ElecL2L3AngleCurrentSensor : ElecAngleCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L2-L3" }

// Sensor for line 3 to line 1 AC electric angle current
ElecL3L1AngleCurrentSensor : ElecAngleCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L3-L1" }

// Sensor for line 1 to line 2 AC electric THD current
ElecL1L2ThdCurrentSensor : ElecThdCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L1-L2" }

// Sensor for line 2 to line 3 AC electric THD current
ElecL2L3ThdCurrentSensor : ElecThdCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L2-L3" }

// Sensor for line 3 to line 1 AC electric THD current
ElecL3L1ThdCurrentSensor : ElecThdCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L3-L1" }

// Sensor for line 1 to line 2 AC electric imbalance current
ElecL1L2ImbalanceCurrentSensor : ElecImbalanceCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L1-L2" }

// Sensor for line 2 to line 3 AC electric imbalance current
ElecL2L3ImbalanceCurrentSensor : ElecImbalanceCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L2-L3" }

// Sensor for line 3 to line 1 AC electric imbalance current
ElecL3L1ImbalanceCurrentSensor : ElecImbalanceCurrentSensor & ElecPhaseCurrentSensor { phaseCurrent: "L3-L1" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the line location of AC electric current (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for line AC electric current
ElecLineCurrentSensor : ElecCurrentSensor & ElecAcSensor <abstract> { lineCurrent: ElecLine }

// Sensor for line 1 AC electric magnitude current
ElecL1MagnitudeCurrentSensor : ElecMagnitudeCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L1" }

// Sensor for line 2 AC electric magnitude current
ElecL2MagnitudeCurrentSensor : ElecMagnitudeCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L2" }

// Sensor for line 3 AC electric magnitude current
ElecL3MagnitudeCurrentSensor : ElecMagnitudeCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L3" }

// Sensor for line 1 AC electric angle current
ElecL1AngleCurrentSensor : ElecAngleCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L1" }

// Sensor for line 2 AC electric angle current
ElecL2AngleCurrentSensor : ElecAngleCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L2" }

// Sensor for line 3 AC electric angle current
ElecL3AngleCurrentSensor : ElecAngleCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L3" }

// Sensor for line 1 AC electric THD current
ElecL1ThdCurrentSensor : ElecThdCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L1" }

// Sensor for line 2 AC electric THD current
ElecL2ThdCurrentSensor : ElecThdCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L2" }

// Sensor for line 3 AC electric THD current
ElecL3ThdCurrentSensor : ElecThdCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L3" }

// Sensor for line 1 AC electric imbalance current
ElecL1ImbalanceCurrentSensor : ElecImbalanceCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L1" }

// Sensor for line 2 AC electric imbalance current
ElecL2ImbalanceCurrentSensor : ElecImbalanceCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L2" }

// Sensor for line 3 AC electric imbalance current
ElecL3ImbalanceCurrentSensor : ElecImbalanceCurrentSensor & ElecLineCurrentSensor { lineCurrent: "L3" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the aggregate location of AC electric current (leaves)
//////////////////////////////////////////////////////////////////////////

// Sensor for line average AC electric magnitude current
ElecLineAvgMagnitudeCurrentSensor : ElecMagnitudeCurrentSensor { lineAvg }

// Sensor for phase average AC electric magnitude current
ElecPhaseAvgMagnitudeCurrentSensor : ElecMagnitudeCurrentSensor { phaseAvg }

// Sensor for line average AC electric angle current
ElecLineAvgAngleCurrentSensor : ElecAngleCurrentSensor { lineAvg }

// Sensor for phase average AC electric angle current
ElecPhaseAvgAngleCurrentSensor : ElecAngleCurrentSensor { phaseAvg }

// Sensor for line average AC electric THD current
ElecLineAvgThdCurrentSensor : ElecThdCurrentSensor { lineAvg }

// Sensor for phase average AC electric THD current
ElecPhaseAvgThdCurrentSensor : ElecThdCurrentSensor { phaseAvg }

// Sensor for line average AC electric imbalance current
ElecLineAvgImbalanceCurrentSensor : ElecImbalanceCurrentSensor { lineAvg }

// Sensor for phase average AC electric imbalance current
ElecPhaseAvgImbalanceCurrentSensor : ElecImbalanceCurrentSensor { phaseAvg }

//////////////////////////////////////////////////////////////////////////
// Setpoints for AC current subtypes (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for maximum AC magnitude current
ElecMagnitudeCurrentMaxSp : ElecCurrentMaxSp & ElecAcSp <abstract> { magnitude }

//////////////////////////////////////////////////////////////////////////
// Setpoints for the phase location of AC electric current (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for phase maximum AC electric current
ElecPhaseCurrentMaxSp : ElecCurrentMaxSp & ElecAcSp <abstract> { phaseCurrent: ElecLineToLine }

// Setpoint for line 1 to line 2 maximum AC electric magnitude current
ElecL1L2MagnitudeCurrentMaxSp : ElecMagnitudeCurrentMaxSp & ElecPhaseCurrentMaxSp { phaseCurrent: "L1-L2" }

// Setpoint for line 2 to line 3 maximum AC electric magnitude current
ElecL2L3MagnitudeCurrentMaxSp : ElecMagnitudeCurrentMaxSp & ElecPhaseCurrentMaxSp { phaseCurrent: "L2-L3" }

// Setpoint for line 3 to line 1 maximum AC electric magnitude current
ElecL3L1MagnitudeCurrentMaxSp : ElecMagnitudeCurrentMaxSp & ElecPhaseCurrentMaxSp { phaseCurrent: "L3-L1" }

//////////////////////////////////////////////////////////////////////////
// Setpoints for the line location of AC electric current (abstract)
//////////////////////////////////////////////////////////////////////////

// Setpoint for line maximum AC electric current
ElecLineCurrentMaxSp : ElecCurrentMaxSp & ElecAcSp <abstract> { lineCurrent: ElecLine }

// Setpoint for line 1 maximum AC electric magnitude current
ElecL1MagnitudeCurrentMaxSp : ElecMagnitudeCurrentMaxSp & ElecLineCurrentMaxSp { lineCurrent: "L1" }

// Setpoint for line 2 maximum AC electric magnitude current
ElecL2MagnitudeCurrentMaxSp : ElecMagnitudeCurrentMaxSp & ElecLineCurrentMaxSp { lineCurrent: "L2" }

// Setpoint for line 3 maximum AC electric magnitude current
ElecL3MagnitudeCurrentMaxSp : ElecMagnitudeCurrentMaxSp & ElecLineCurrentMaxSp { lineCurrent: "L3" }

//////////////////////////////////////////////////////////////////////////
// Sensors for AC voltage subtypes (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for AC magnitude voltage
ElecMagnitudeVoltSensor : ElecVoltSensor & ElecAcSensor <abstract> { magnitude }

// Sensor for AC angle voltage
ElecAngleVoltSensor : ElecVoltSensor & ElecAcSensor <abstract> { angle }

// Sensor for AC THD voltage
ElecThdVoltSensor : ElecVoltSensor & ElecAcSensor <abstract> { thd }

// Sensor for AC imbalance voltage
ElecImbalanceVoltSensor : ElecVoltSensor & ElecAcSensor <abstract> { imbalance }

//////////////////////////////////////////////////////////////////////////
// Sensors for the phase location of AC electric voltage (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for phase AC electric voltage
ElecPhaseVoltSensor : ElecVoltSensor & ElecAcSensor <abstract> { phaseVolt: ElecLineToNeutral }

// Sensor for line 1 to neutral AC electric magnitude voltage
ElecL1NMagnitudeVoltSensor : ElecMagnitudeVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L1-N" }

// Sensor for line 2 to neutral AC electric magnitude voltage
ElecL2NMagnitudeVoltSensor : ElecMagnitudeVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L2-N" }

// Sensor for line 3 to neutral AC electric magnitude voltage
ElecL3NMagnitudeVoltSensor : ElecMagnitudeVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L3-N" }

// Sensor for line 1 to neutral AC electric angle voltage
ElecL1NAngleVoltSensor : ElecAngleVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L1-N" }

// Sensor for line 2 to neutral AC electric angle voltage
ElecL2NAngleVoltSensor : ElecAngleVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L2-N" }

// Sensor for line 3 to neutral AC electric angle voltage
ElecL3NAngleVoltSensor : ElecAngleVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L3-N" }

// Sensor for line 1 to neutral AC electric THD voltage
ElecL1NThdVoltSensor : ElecThdVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L1-N" }

// Sensor for line 2 to neutral AC electric THD voltage
ElecL2NThdVoltSensor : ElecThdVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L2-N" }

// Sensor for line 3 to neutral AC electric THD voltage
ElecL3NThdVoltSensor : ElecThdVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L3-N" }

// Sensor for line 1 to neutral AC electric imbalance voltage
ElecL1NImbalanceVoltSensor : ElecImbalanceVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L1-N" }

// Sensor for line 2 to neutral AC electric imbalance voltage
ElecL2NImbalanceVoltSensor : ElecImbalanceVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L2-N" }

// Sensor for line 3 to neutral AC electric imbalance voltage
ElecL3NImbalanceVoltSensor : ElecImbalanceVoltSensor & ElecPhaseVoltSensor { phaseVolt: "L3-N" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the line location of AC electric voltage (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for line AC electric voltage
ElecLineVoltSensor : ElecVoltSensor & ElecAcSensor <abstract> { lineVolt: ElecLineToLine }

// Sensor for line 1 to line 2 AC electric magnitude voltage
ElecL1L2MagnitudeVoltSensor : ElecMagnitudeVoltSensor & ElecLineVoltSensor { lineVolt: "L1-L2" }

// Sensor for line 2 to line 3 AC electric magnitude voltage
ElecL2L3MagnitudeVoltSensor : ElecMagnitudeVoltSensor & ElecLineVoltSensor { lineVolt: "L2-L3" }

// Sensor for line 3 to line 1 AC electric magnitude voltage
ElecL3L1MagnitudeVoltSensor : ElecMagnitudeVoltSensor & ElecLineVoltSensor { lineVolt: "L3-L1" }

// Sensor for line 1 to line 2 AC electric angle voltage
ElecL1L2AngleVoltSensor : ElecAngleVoltSensor & ElecLineVoltSensor { lineVolt: "L1-L2" }

// Sensor for line 2 to line 3 AC electric angle voltage
ElecL2L3AngleVoltSensor : ElecAngleVoltSensor & ElecLineVoltSensor { lineVolt: "L2-L3" }

// Sensor for line 3 to line 1 AC electric angle voltage
ElecL3L1AngleVoltSensor : ElecAngleVoltSensor & ElecLineVoltSensor { lineVolt: "L3-L1" }

// Sensor for line 1 to line 2 AC electric THD voltage
ElecL1L2ThdVoltSensor : ElecThdVoltSensor & ElecLineVoltSensor { lineVolt: "L1-L2" }

// Sensor for line 2 to line 3 AC electric THD voltage
ElecL2L3ThdVoltSensor : ElecThdVoltSensor & ElecLineVoltSensor { lineVolt: "L2-L3" }

// Sensor for line 3 to line 1 AC electric THD voltage
ElecL3L1ThdVoltSensor : ElecThdVoltSensor & ElecLineVoltSensor { lineVolt: "L3-L1" }

// Sensor for line 1 to line 2 AC electric imbalance voltage
ElecL1L2ImbalanceVoltSensor : ElecImbalanceVoltSensor & ElecLineVoltSensor { lineVolt: "L1-L2" }

// Sensor for line 2 to line 3 AC electric imbalance voltage
ElecL2L3ImbalanceVoltSensor : ElecImbalanceVoltSensor & ElecLineVoltSensor { lineVolt: "L2-L3" }

// Sensor for line 3 to line 1 AC electric imbalance voltage
ElecL3L1ImbalanceVoltSensor : ElecImbalanceVoltSensor & ElecLineVoltSensor { lineVolt: "L3-L1" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the aggregate location of AC electric voltage (leaves)
//////////////////////////////////////////////////////////////////////////

// Sensor for line average AC electric magnitude voltage
ElecLineAvgMagnitudeVoltSensor : ElecMagnitudeVoltSensor { lineAvg }

// Sensor for phase average AC electric magnitude voltage
ElecPhaseAvgMagnitudeVoltSensor : ElecMagnitudeVoltSensor { phaseAvg }

// Sensor for line average AC electric angle voltage
ElecLineAvgAngleVoltSensor : ElecAngleVoltSensor { lineAvg }

// Sensor for phase average AC electric angle voltage
ElecPhaseAvgAngleVoltSensor : ElecAngleVoltSensor { phaseAvg }

// Sensor for line average AC electric THD voltage
ElecLineAvgThdVoltSensor : ElecThdVoltSensor { lineAvg }

// Sensor for phase average AC electric THD voltage
ElecPhaseAvgThdVoltSensor : ElecThdVoltSensor { phaseAvg }

// Sensor for line average AC electric imbalance voltage
ElecLineAvgImbalanceVoltSensor : ElecImbalanceVoltSensor { lineAvg }

// Sensor for phase average AC electric imbalance voltage
ElecPhaseAvgImbalanceVoltSensor : ElecImbalanceVoltSensor { phaseAvg }

//////////////////////////////////////////////////////////////////////////
// Sensors for AC demand subtypes (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for AC active demand
ElecActiveDemandSensor : ElecDemandSensor & ElecAcSensor <abstract> { active }

// Sensor for AC reactive demand
ElecReactiveDemandSensor : ElecDemandSensor & ElecAcSensor <abstract> { reactive }

// Sensor for AC apparent demand
ElecApparentDemandSensor : ElecDemandSensor & ElecAcSensor <abstract> { apparent }

//////////////////////////////////////////////////////////////////////////
// Sensors for the aggregate location of AC electric demand (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for total AC electric active demand
ElecTotalActiveDemandSensor : ElecActiveDemandSensor <abstract> { total }

// Sensor for total AC electric reactive demand
ElecTotalReactiveDemandSensor : ElecReactiveDemandSensor <abstract> { total }

// Sensor for total AC electric apparent demand
ElecTotalApparentDemandSensor : ElecApparentDemandSensor <abstract> { total }

//////////////////////////////////////////////////////////////////////////
// Sensors for the direction of AC electric demand (leaves)
//////////////////////////////////////////////////////////////////////////

// Sensor for total import of AC electric active demand
ElecImportTotalActiveDemandSensor : ElecTotalActiveDemandSensor { import }

// Sensor for total export of AC electric active demand
ElecExportTotalActiveDemandSensor : ElecTotalActiveDemandSensor { export }

// Sensor for total net of AC electric active demand
ElecNetTotalActiveDemandSensor : ElecTotalActiveDemandSensor { net }

// Sensor for total import of AC electric reactive demand
ElecImportTotalReactiveDemandSensor : ElecTotalReactiveDemandSensor { import }

// Sensor for total export of AC electric reactive demand
ElecExportTotalReactiveDemandSensor : ElecTotalReactiveDemandSensor { export }

// Sensor for total net of AC electric reactive demand
ElecNetTotalReactiveDemandSensor : ElecTotalReactiveDemandSensor { net }

// Sensor for total import of AC electric apparent demand
ElecImportTotalApparentDemandSensor : ElecTotalApparentDemandSensor { import }

// Sensor for total export of AC electric apparent demand
ElecExportTotalApparentDemandSensor : ElecTotalApparentDemandSensor { export }

// Sensor for total net of AC electric apparent demand
ElecNetTotalApparentDemandSensor : ElecTotalApparentDemandSensor { net }

//////////////////////////////////////////////////////////////////////////
// Sensors for the phase location of AC electric power factor (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for phase AC electric power factor
ElecPhasePfSensor : ElecPfSensor & ElecAcSensor <abstract> { phasePf: ElecLine }

// Sensor for line 1 AC electric power factor
ElecL1PfSensor : ElecPhasePfSensor <abstract> { phasePf: "L1" }

// Sensor for line 2 AC electric power factor
ElecL2PfSensor : ElecPhasePfSensor <abstract> { phasePf: "L2" }

// Sensor for line 3 AC electric power factor
ElecL3PfSensor : ElecPhasePfSensor <abstract> { phasePf: "L3" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the line location of AC electric power factor (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for line AC electric power factor
ElecLinePfSensor : ElecPfSensor & ElecAcSensor <abstract> { linePf: ElecLineToLine }

// Sensor for line 1 to line 2 AC electric power factor
ElecL1L2PfSensor : ElecLinePfSensor <abstract> { linePf: "L1-L2" }

// Sensor for line 2 to line 3 AC electric power factor
ElecL2L3PfSensor : ElecLinePfSensor <abstract> { linePf: "L2-L3" }

// Sensor for line 3 to line 1 AC electric power factor
ElecL3L1PfSensor : ElecLinePfSensor <abstract> { linePf: "L3-L1" }

//////////////////////////////////////////////////////////////////////////
// Sensors for the aggregate location of AC electric power factor (abstract)
//////////////////////////////////////////////////////////////////////////

// Sensor for line average AC electric power factor
ElecLineAvgPfSensor : ElecPfSensor & ElecAcSensor <abstract> { lineAvg }

// Sensor for phase average AC electric power factor
ElecPhaseAvgPfSensor : ElecPfSensor & ElecAcSensor <abstract> { phaseAvg }

// Sensor for total AC electric power factor
ElecTotalPfSensor : ElecPfSensor & ElecAcSensor <abstract> { total }

//////////////////////////////////////////////////////////////////////////
// Sensors for the direction of AC electric power factor (leaves)
//////////////////////////////////////////////////////////////////////////

// Sensor for line 1 import AC electric power factor
ElecImportL1PfSensor : ElecL1PfSensor { import }

// Sensor for line 1 export AC electric power factor
ElecExportL1PfSensor : ElecL1PfSensor { export }

// Sensor for line 1 net AC electric power factor
ElecNetL1PfSensor : ElecL1PfSensor { net }

// Sensor for line 2 import AC electric power factor
ElecImportL2PfSensor : ElecL2PfSensor { import }

// Sensor for line 2 export AC electric power factor
ElecExportL2PfSensor : ElecL2PfSensor { export }

// Sensor for line 2 net AC electric power factor
ElecNetL2PfSensor : ElecL2PfSensor { net }

// Sensor for line 3 import AC electric power factor
ElecImportL3PfSensor : ElecL3PfSensor { import }

// Sensor for line 3 export AC electric power factor
ElecExportL3PfSensor : ElecL3PfSensor { export }

// Sensor for line 3 net AC electric power factor
ElecNetL3PfSensor : ElecL3PfSensor { net }

// Sensor for line 1 to line 2 import AC electric power factor
ElecImportL1L2PfSensor : ElecL1L2PfSensor { import }

// Sensor for line 1 to line 2 export AC electric power factor
ElecExportL1L2PfSensor : ElecL1L2PfSensor { export }

// Sensor for line 1 to line 2 net AC electric power factor
ElecNetL1L2PfSensor : ElecL1L2PfSensor { net }

// Sensor for line 2 to line 3 import AC electric power factor
ElecImportL2L3PfSensor : ElecL2L3PfSensor { import }

// Sensor for line 2 to line 3 export AC electric power factor
ElecExportL2L3PfSensor : ElecL2L3PfSensor { export }

// Sensor for line 2 to line 3 net AC electric power factor
ElecNetL2L3PfSensor : ElecL2L3PfSensor { net }

// Sensor for line 3 to line 1 import AC electric power factor
ElecImportL3L1PfSensor : ElecL3L1PfSensor { import }

// Sensor for line 3 to line 1 export AC electric power factor
ElecExportL3L1PfSensor : ElecL3L1PfSensor { export }

// Sensor for line 3 to line 1 net AC electric power factor
ElecNetL3L1PfSensor : ElecL3L1PfSensor { net }

// Sensor for line average import AC electric power factor
ElecImportLineAvgPfSensor : ElecLineAvgPfSensor { import }

// Sensor for line average export AC electric power factor
ElecExportLineAvgPfSensor : ElecLineAvgPfSensor { export }

// Sensor for line average net AC electric power factor
ElecNetLineAvgPfSensor : ElecLineAvgPfSensor { net }

// Sensor for phase average import AC electric power factor
ElecImportPhaseAvgPfSensor : ElecPhaseAvgPfSensor { import }

// Sensor for phase average export AC electric power factor
ElecExportPhaseAvgPfSensor : ElecPhaseAvgPfSensor { export }

// Sensor for phase average net AC electric power factor
ElecNetPhaseAvgPfSensor : ElecPhaseAvgPfSensor { net }

// Sensor for total import AC electric power factor
ElecImportTotalPfSensor : ElecTotalPfSensor { import }

// Sensor for total export AC electric power factor
ElecExportTotalPfSensor : ElecTotalPfSensor { export }

// Sensor for total net AC electric power factor
ElecNetTotalPfSensor : ElecTotalPfSensor { net }
